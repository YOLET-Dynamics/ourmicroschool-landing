services:
  oms-landing:
    build:
      context: .
    image: oms-landing
    container_name: oms-landing
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oms.rule=Host(`ourmicroschool.com`) || Host(`www.ourmicroschool.com`)"
      - "traefik.http.routers.oms.entrypoints=websecure"
      - "traefik.http.routers.oms.tls.certresolver=myresolver"
      - "traefik.http.services.oms.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.oms-headers.headers.customResponseHeaders.Cache-Control=no-store,no-cache,must-revalidate"
      - "traefik.http.middlewares.oms-headers.headers.customResponseHeaders.Pragma=no-cache"
      - "traefik.http.middlewares.oms-headers.headers.customResponseHeaders.Expires=0"
      - "traefik.http.routers.oms.middlewares=oms-headers"
    restart: always
    networks:
      - internal

  oms-identity:
    build:
      context: ../../oms/oms-identity
    image: oms-identity
    container_name: oms-identity
    env_file:
      - ../../oms/oms-identity/.env
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oms-identity.rule=Host(`identity-api.ourmicroschool.com`)"
      - "traefik.http.routers.oms-identity.entrypoints=websecure"
      - "traefik.http.routers.oms-identity.tls.certresolver=myresolver"
      - "traefik.http.services.oms-identity.loadbalancer.server.port=8001"
      # Add these new CORS middleware labels:
      - "traefik.http.middlewares.oms-identity-cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.oms-identity-cors.headers.accesscontrolallowmethods=GET,POST,PUT,OPTIONS"
      - "traefik.http.middlewares.oms-identity-cors.headers.accesscontrolalloworiginlist=https://ourmicroschool.com,https://www.ourmicroschool.com,https://admin.ourmicroschool.com,https://app.ourmicroschool.com,https://classrooms.ourmicroschool.com,https://parents.ourmicroschool.com"
      - "traefik.http.middlewares.oms-identity-cors.headers.accesscontrolallowheaders=Origin,Content-Type,Accept,Authorization"
      - "traefik.http.middlewares.oms-identity-cors.headers.accessControlMaxAge=100"
      # Add the middleware to the router
      - "traefik.http.routers.oms-identity.middlewares=oms-identity-cors"
    restart: always

  reverse-proxy:
    image: traefik:v3.2
    container_name: reverse-proxy
    networks:
      - internal
      - default
    command:
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=yonit.anosie@ourmicroschool.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entryPoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/letsencrypt:/letsencrypt"
    restart: always

networks:
  internal:
    name: internal

volumes:
  letsencrypt:
